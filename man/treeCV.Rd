% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/treeCV.R
\name{treeCV}
\alias{treeCV}
\title{Performs k-fold cross validation for selection optimal tuning parameter lambda.}
\usage{
treeCV(tre, dat, nfolds = 5, param = seq(0, 0.15, 0.01), AIPWE = FALSE,
  N0 = 20, n0 = 5, sp.var, sort = FALSE, ctgs = NA)
}
\arguments{
\item{tre}{original large tree from grow.ITR()}

\item{dat}{data frame used to grow tre}

\item{nfolds}{number of folds in the cross validation. Defaults to 10.}

\item{param}{vector of numeric values to be considered as the tuning parameter. Defaults to seq(0, 0.15, 0.1) but should be modified for each specific problem.}

\item{AIPWE}{logical indicating if the augmented estimator should be used. Defaults to FALSE.}

\item{N0}{sets the minimal number of observations allowed in terminal nodes. Defaults to 20.}

\item{n0}{sets the minimum number of observations from each treatment group to be in each child node.  Defaults to 5.}

\item{sp.var}{specifies the columns of splitting variables in the input data to grow the original tree.}

\item{sort}{logical indicating if data should be sorted before folds are created. Defaults to FALSE.}

\item{ctgs}{columns of categorical variables.}
}
\value{
A summary of the cross validation including optimal penalty parameter and the optimal model.

\item{best.tree}{optimal ITR tree model}

\item{best.lambda}{optimal lambda}

\item{full.tree}{original input tree}

\item{pruned.tree}{pruning output given the optimal lambda}

\item{data}{input data}

\item{details}{summary of model performance for each lambda under consideration}
}
\description{
Performs k-fold cross validation for selection optimal tuning parameter lambda.
}
\examples{

# Grow large tree
set.seed(1)
dat <- rdat(1000, depth = 2)
tre <- grow.ITR(dat, split.var = 1:4, min.ndsz = 5, n0 = 2)

# This tre should have 3 terminal nodes (correct size), but has 4 as grown.

cv.prune <- treeCV(tre, dat, nfolds = 5, param = seq(0, 0.15, 0.01), sp.var = 1:4)

# The best tree returned has the correct number of nodes
cv.prune$best.tree
  node size n.1 n.0 trt.effect var vname cut.1 cut.2  score
1    0 1000 480 520  0.4264782   1    x1     r   0.3 4.8839
3   01  317 162 155 -1.8782577  NA  <NA>  <NA>  <NA>     NA
2   02  683 318 365  1.4908419   3    x3     r   0.1 5.0174
4  021   85  36  49 -1.7575391  NA  <NA>  <NA>  <NA>     NA
5  022  598 282 316  1.9529338  NA  <NA>  <NA>  <NA>     NA


}
